name: Deploy App

on:
  workflow_run:
    workflows: ["Terraform Infra Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # âœ… Download secret_name.txt from Infra pipeline
      - name: Download secret artifact
        uses: actions/download-artifact@v4
        with:
          name: app-secret
          path: .

      - name: Read secret name
        id: read_secret
        run: |
          SECRET_NAME=$(cat secret_name.txt)
          echo "SECRET_NAME=$SECRET_NAME" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Fetch App Secrets
        run: |
          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id $SECRET_NAME \
            --query SecretString \
            --output text)

          echo "$SECRET_JSON" > secret.json
          for key in DB_NAME DB_USER DB_PASSWORD DB_HOST DB_PORT DJANGO_SECRET_KEY; do
            value=$(jq -r ".${key}" secret.json)
            echo "$key=$value" >> $GITHUB_ENV
          done

      - name: Install Python dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Migrations
        run: |
          source venv/bin/activate
          export DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY
          export DB_NAME=$DB_NAME
          export DB_USER=$DB_USER
          export DB_PASSWORD=$DB_PASSWORD
          export DB_HOST=$DB_HOST
          export DB_PORT=$DB_PORT

          python manage.py migrate
          python manage.py createsuperuser --noinput --username admin --email admin@example.com || echo "Admin already exists"

      - name: Build and Push Docker Image
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/myapp:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster django-ecs-cluster \
            --service django-service \
            --force-new-deployment
