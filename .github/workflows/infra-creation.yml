name: Terraform infra pipeline

on:
  push:
    paths:
      - 'terraform/**'
  workflow_dispatch:

jobs:
  terraform:
    name: Provision AWS infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest  

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform format
        run: terraform fmt -recursive

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_djanko_secret_key: ${{ secrets.DJANGO_SECRET_KEY }}

      - name: Terraform apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          TF_VAR_djanko_secret_key: ${{ secrets.DJANGO_SECRET_KEY }}
      - name: Export Terraform outputs
        id: tfoutputs
        run: |
          terraform output -json > tfoutputs.json
          cat tfoutputs.json

      - name: Update GitHub secrets with Terraform outputs
        if: github.ref == 'refs/heads/main'
        run: |
          for key in $(jq -r 'keys[]' tfoutputs.json); do
            value=$(jq -r ".\"$key\".value" tfoutputs.json)
            echo "Setting secret: $key"
            gh secret set $key --body "$value"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    post:
      - name: Force Unlock Terraform State
        if: always()
        run: |
          LOCK_ID=$(aws dynamodb scan \
            --table-name your-lock-table \
            --query "Items[0].LockID.S" \
            --output text)

          if [ "$LOCK_ID" != "None" ]; then
            terraform force-unlock -force $LOCK_ID || true
          fi