name: Terraform Infra Pipeline

on:
  push:
    paths:
      - 'terraform/**'
  workflow_dispatch:

jobs:
  terraform:
    name: Provision AWS Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform format
        run: terraform fmt -recursive

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_django_secret_key: ${{ secrets.DJANGO_SECRET_KEY }}

      - name: Terraform apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          TF_VAR_django_secret_key: ${{ secrets.DJANGO_SECRET_KEY }}

      - name: Export Terraform outputs
        id: tfoutputs
        run: |
          terraform output -json | tee tfoutputs.json
          jq -c . tfoutputs.json  # sanity check

      - name: Update GitHub secrets with Terraform outputs
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Reading Terraform outputs and storing as GitHub secrets..."
          jq -c 'to_entries[]' tfoutputs.json | while read -r item; do
            key=$(echo "$item" | jq -r '.key')
            type=$(echo "$item" | jq -r '.value.type[0]?')

            if [ "$type" = "tuple" ]; then
              # Convert array to comma-separated string
              value=$(echo "$item" | jq -r '.value.value | join(",")')
            else
              value=$(echo "$item" | jq -r '.value.value')
            fi

            echo "Setting secret: $key = $value"
            gh secret set "$key" --body "$value"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
